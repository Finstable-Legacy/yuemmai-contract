/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LiquidateV1, LiquidateV1Interface } from "../LiquidateV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_KUBLending",
        type: "address",
      },
      {
        internalType: "address",
        name: "_SwapRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "contract ILKAP20Liquidate",
        name: "lending",
        type: "address",
      },
      {
        internalType: "address",
        name: "toSwap",
        type: "address",
      },
      {
        internalType: "address",
        name: "finalToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "input",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minReward",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
    ],
    name: "KAP20liquidateBorrow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "KUBLending",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SwapRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "errorCode",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "returnAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610a97380380610a9783398101604081905261002f91610087565b600080546001600160a01b03199081163317909155600180546001600160a01b03948516908316179055600380549290931691161790556100ba565b80516001600160a01b038116811461008257600080fd5b919050565b6000806040838503121561009a57600080fd5b6100a38361006b565b91506100b16020840161006b565b90509250929050565b6109ce806100c96000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80634d90ccaf1461005c5780634dc32eff1461007857806364bcf95a146100a3578063ea217df9146100b6578063f35eeaef146100c9575b600080fd5b61006560045481565b6040519081526020015b60405180910390f35b60035461008b906001600160a01b031681565b6040516001600160a01b03909116815260200161006f565b60015461008b906001600160a01b031681565b6100656100c4366004610750565b6100d2565b61006560025481565b60008060008a6001600160a01b0316632495a5996040518163ffffffff1660e01b8152600401602060405180830381865afa158015610115573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061013991906107de565b6040516323b872dd60e01b81526001600160a01b038681166004830152306024830152604482018b9052919250908216906323b872dd906064016020604051808303816000875af1158015610192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b69190610802565b5060405163095ea7b360e01b81526001600160a01b038c81166004830152602482018a905282169063095ea7b3906044016020604051808303816000875af1158015610206573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022a9190610802565b50600154600092506001600160a01b038c81169116146102d757604051630301d8c760e31b81526004810189905260248101889052604481018790526001600160a01b0386811660648301523060848301528c169063180ec6389060a4016020604051808303816000875af11580156102a7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cb9190610824565b600481905591506102e9565b6102e3888888886106b8565b60048290555b811561033b5760405162461bcd60e51b815260206004820152601760248201527f6c697175696461746520626f72726f77206661696c6564000000000000000000604482015260640160405180910390fd5b8a6001600160a01b0316632495a5996040518163ffffffff1660e01b8152600401602060405180830381865afa158015610379573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061039d91906107de565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156103e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104079190610824565b6002556001600160a01b03818116908a16141561049c5760025460405163a9059cbb60e01b81526001600160a01b03868116600483015260248201929092529082169063a9059cbb906044016020604051808303816000875af1158015610472573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104969190610802565b506106a6565b60408051600380825260808201909252600091602082016060803683370190505090508b6001600160a01b0316632495a5996040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052191906107de565b8160008151811061053457610534610853565b60200260200101906001600160a01b031690816001600160a01b0316815250508a8160018151811061056857610568610853565b60200260200101906001600160a01b031690816001600160a01b031681525050898160028151811061059c5761059c610853565b6001600160a01b03928316602091820292909201015260035460025460405163095ea7b360e01b8152918316600483015260248201529083169063095ea7b3906044016020604051808303816000875af11580156105fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106229190610802565b506003546002546040516338ed173960e01b81526001600160a01b03909216916338ed17399161065c918c9086908b908e90600401610869565b6000604051808303816000875af115801561067b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106a391908101906108da565b50505b50506004549998505050505050505050565b600154604051630301d8c760e31b81526004810186905260248101859052604481018490526001600160a01b0383811660648301523060848301529091169063180ec6389060a401600060405180830381600087803b15801561071a57600080fd5b505af115801561072e573d6000803e3d6000fd5b5050505050505050565b6001600160a01b038116811461074d57600080fd5b50565b600080600080600080600080610100898b03121561076d57600080fd5b883561077881610738565b9750602089013561078881610738565b9650604089013561079881610738565b9550606089013594506080890135935060a0890135925060c08901356107bd81610738565b915060e08901356107cd81610738565b809150509295985092959890939650565b6000602082840312156107f057600080fd5b81516107fb81610738565b9392505050565b60006020828403121561081457600080fd5b815180151581146107fb57600080fd5b60006020828403121561083657600080fd5b5051919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b818110156108b95784516001600160a01b031683529383019391830191600101610894565b50506001600160a01b03969096166060850152505050608001529392505050565b600060208083850312156108ed57600080fd5b825167ffffffffffffffff8082111561090557600080fd5b818501915085601f83011261091957600080fd5b81518181111561092b5761092b61083d565b8060051b604051601f19603f830116810181811085821117156109505761095061083d565b60405291825284820192508381018501918883111561096e57600080fd5b938501935b8285101561098c57845184529385019392850192610973565b9897505050505050505056fea26469706673582212200602a226bf86b4718d286dc1c35ae74d4b055b4f38112dfdec0928df3ef2b67b64736f6c634300080b0033";

export class LiquidateV1__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _KUBLending: string,
    _SwapRouter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LiquidateV1> {
    return super.deploy(
      _KUBLending,
      _SwapRouter,
      overrides || {}
    ) as Promise<LiquidateV1>;
  }
  getDeployTransaction(
    _KUBLending: string,
    _SwapRouter: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _KUBLending,
      _SwapRouter,
      overrides || {}
    );
  }
  attach(address: string): LiquidateV1 {
    return super.attach(address) as LiquidateV1;
  }
  connect(signer: Signer): LiquidateV1__factory {
    return super.connect(signer) as LiquidateV1__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidateV1Interface {
    return new utils.Interface(_abi) as LiquidateV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidateV1 {
    return new Contract(address, _abi, signerOrProvider) as LiquidateV1;
  }
}
