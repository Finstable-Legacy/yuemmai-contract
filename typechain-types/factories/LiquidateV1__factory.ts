/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { LiquidateV1, LiquidateV1Interface } from "../LiquidateV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_KUBLending",
        type: "address",
      },
      {
        internalType: "address",
        name: "_SwapRouter",
        type: "address",
      },
      {
        internalType: "address",
        name: "_SwapFactory",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract ILKAP20Liquidate",
            name: "lending",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountADesired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountAMin",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "toSwap",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amountBDesired",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amountBMin",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "finalToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "input",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minReward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "borrower",
            type: "address",
          },
          {
            internalType: "address",
            name: "liquidator",
            type: "address",
          },
        ],
        internalType: "struct LiquidateV1.LiquidateInfo",
        name: "args",
        type: "tuple",
      },
    ],
    name: "KAP20liquidateBorrow",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "KUBLending",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SwapFactory",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SwapRouter",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "errorCode",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "returnAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610aaa380380610aaa83398101604081905261002f91610098565b600080546001600160a01b03199081163317909155600180546001600160a01b039586169083161790556003805493851693821693909317909255600580549190931691161790556100db565b80516001600160a01b038116811461009357600080fd5b919050565b6000806000606084860312156100ad57600080fd5b6100b68461007c565b92506100c46020850161007c565b91506100d26040850161007c565b90509250925092565b6109c0806100ea6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80634d90ccaf146100675780634dc32eff1461008357806364bcf95a146100ae578063abdb7cc5146100c1578063c3eaf667146100d4578063f35eeaef146100e7575b600080fd5b61007060045481565b6040519081526020015b60405180910390f35b600354610096906001600160a01b031681565b6040516001600160a01b03909116815260200161007a565b600154610096906001600160a01b031681565b6100706100cf3660046108dd565b6100f0565b600554610096906001600160a01b031681565b61007060025481565b600080610100602084018461090e565b6001600160a01b0316632495a5996040518163ffffffff1660e01b8152600401602060405180830381865afa15801561013d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101619190610932565b60035460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af11580156101b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101d8919061094f565b506101e9608084016060850161090e565b60035460405163095ea7b360e01b81526001600160a01b039182166004820152600019602482015291169063095ea7b3906044016020604051808303816000875af115801561023c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610260919061094f565b506000610270602085018561090e565b6001600160a01b0316632495a5996040518163ffffffff1660e01b8152600401602060405180830381865afa1580156102ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d19190610932565b90506001600160a01b03811663095ea7b36102ef602087018761090e565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260001960248201526044016020604051808303816000875af115801561033d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610361919061094f565b50600154600092506001600160a01b031661037f602086018661090e565b6001600160a01b0316146104575761039a602085018561090e565b6001600160a01b031663180ec63860006101008701356101208801356103c86101608a016101408b0161090e565b6040516001600160e01b031960e087901b1681526004810194909452602484019290925260448301526001600160a01b0316606482015230608482015260a4016020604051808303816000875af1158015610427573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044b9190610971565b60048190559150610485565b61047f600061010086013561012087013561047a61016089016101408a0161090e565b61085d565b60048290555b81156104d75760405162461bcd60e51b815260206004820152601760248201527f6c697175696461746520626f72726f77206661696c6564000000000000000000604482015260640160405180910390fd5b600080806104eb608088016060890161090e565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610531573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105559190610971565b9250610564602088018861090e565b6001600160a01b0316632495a5996040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c59190610932565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801561060b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061062f9190610971565b9150610641608088016060890161090e565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610687573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ab9190610971565b92506106bd608088016060890161090e565b6001600160a01b031663a9059cbb6106dd6101808a016101608b0161090e565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018690526044016020604051808303816000875af115801561072a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061074e919061094f565b5061075c602088018861090e565b6001600160a01b0316632495a5996040518163ffffffff1660e01b8152600401602060405180830381865afa158015610799573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107bd9190610932565b6001600160a01b031663a9059cbb6107dd6101808a016101608b0161090e565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af115801561082a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084e919061094f565b50506004549695505050505050565b600154604051630301d8c760e31b81526004810186905260248101859052604481018490526001600160a01b0383811660648301523060848301529091169063180ec6389060a401600060405180830381600087803b1580156108bf57600080fd5b505af11580156108d3573d6000803e3d6000fd5b5050505050505050565b600061018082840312156108f057600080fd5b50919050565b6001600160a01b038116811461090b57600080fd5b50565b60006020828403121561092057600080fd5b813561092b816108f6565b9392505050565b60006020828403121561094457600080fd5b815161092b816108f6565b60006020828403121561096157600080fd5b8151801515811461092b57600080fd5b60006020828403121561098357600080fd5b505191905056fea2646970667358221220266dcb57f5ee7676ee34a2a0c267545c429e904ee7b8159e26e8bf7c8765e98664736f6c634300080b0033";

export class LiquidateV1__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _KUBLending: string,
    _SwapRouter: string,
    _SwapFactory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LiquidateV1> {
    return super.deploy(
      _KUBLending,
      _SwapRouter,
      _SwapFactory,
      overrides || {}
    ) as Promise<LiquidateV1>;
  }
  getDeployTransaction(
    _KUBLending: string,
    _SwapRouter: string,
    _SwapFactory: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _KUBLending,
      _SwapRouter,
      _SwapFactory,
      overrides || {}
    );
  }
  attach(address: string): LiquidateV1 {
    return super.attach(address) as LiquidateV1;
  }
  connect(signer: Signer): LiquidateV1__factory {
    return super.connect(signer) as LiquidateV1__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LiquidateV1Interface {
    return new utils.Interface(_abi) as LiquidateV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LiquidateV1 {
    return new Contract(address, _abi, signerOrProvider) as LiquidateV1;
  }
}
